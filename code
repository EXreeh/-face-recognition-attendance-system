import cv2
import face_recognition
import numpy as np
import os
import pandas as pd
from datetime import datetime

# Path to the dataset
dataset_path = 'dataset'

# Load images and learn how to recognize them
def load_images_from_folder(folder):
    images = []
    class_names = []
    for student_name in os.listdir(folder):
        student_folder = os.path.join(folder, student_name)
        if os.path.isdir(student_folder):
            for filename in os.listdir(student_folder):
                img_path = os.path.join(student_folder, filename)
                img = cv2.imread(img_path)
                if img is not None:
                    images.append(img)
                    class_names.append(student_name)
    return images, class_names

def encode_faces(images):
    encoded_faces = []
    for img in images:
        img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)
        boxes = face_recognition.face_locations(img)
        encodings = face_recognition.face_encodings(img, boxes)
        if encodings:
            encoded_faces.append(encodings[0])
    return encoded_faces

images, class_names = load_images_from_folder(dataset_path)
encoded_faces = encode_faces(images)

# Initialize attendance list
attendance_list = []

# Start the video capture
video_capture = cv2.VideoCapture(0)

while True:
    ret, frame = video_capture.read()
    if not ret:
        break

    small_frame = cv2.resize(frame, (0, 0), fx=0.25, fy=0.25)
    rgb_small_frame = small_frame[:, :, ::-1]

    face_locations = face_recognition.face_locations(rgb_small_frame)
    face_encodings = face_recognition.face_encodings(rgb_small_frame, face_locations)

    for face_encoding, face_location in zip(face_encodings, face_locations):
        matches = face_recognition.compare_faces(encoded_faces, face_encoding)
        name = "Unknown"

        face_distances = face_recognition.face_distance(encoded_faces, face_encoding)
        best_match_index = np.argmin(face_distances)
        if matches[best_match_index]:
            name = class_names[best_match_index]

        if name != "Unknown" and name not in attendance_list:
            attendance_list.append(name)
            print(f"Attendance marked for {name}")

        # Draw a box around the face
        top, right, bottom, left = face_location
        top *= 4
        right *= 4
        bottom *= 4
        left *= 4
        cv2.rectangle(frame, (left, top), (right, bottom), (0, 255, 0), 2)
        cv2.putText(frame, name, (left, top - 10), cv2.FONT_HERSHEY_SIMPLEX, 0.9, (255, 0, 0), 2)

    cv2.imshow('Video', frame)

    if cv2.waitKey(1) & 0xFF == ord('q'):
        break

# Save attendance to a CSV file
attendance_df = pd.DataFrame(attendance_list, columns=['Name'])
attendance_df['Time'] = datetime.now().strftime("%Y-%m-%d %H:%M:%S")
attendance_df.to_csv('attendance.csv', index=False)

video_capture.release()
cv2.destroyAllWindows()
